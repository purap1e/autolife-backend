variables:
  REGISTRY: registry.gitlab.com
  GROUP: rmr-autolife
  PROJECT: AutoLife-backend
  APP_IMAGE: ${REGISTRY}/${GROUP}/${PROJECT}
  DB_IMAGE: postgres:14

stages:
  - build
  - publish
  - deploy

build:
  stage: build
  image: maven:3.8.4-openjdk-17
  script:
    - mvn clean package -DskipTests
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - ./target
  artifacts:
    paths:
      - target/*.jar
  tags:
    - team5bootcamp

publish-feature:
  stage: publish
  variables:
    TAG: $CI_COMMIT_SHORT_SHA
  cache:
    policy: pull
    key: $CI_COMMIT_REF_SLUG
    paths:
      - ./target
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build -t ${APP_IMAGE}:${TAG} .
    - docker push ${APP_IMAGE}:${TAG}
    - docker image rm ${APP_IMAGE}:${TAG}
    - docker image prune -a --force --filter "until=120h"
  needs:
    - build
  only:
    - /^feature\/.*$/
  when: manual
  tags:
    - team5bootcamp

publish:
  extends: publish-feature
  variables:
    TAG: $CI_COMMIT_REF_NAME
  needs:
    - build
  only:
    - test
    - main
  when: on_success

deploy-all-test:
  stage: deploy
  image:
    name: docker/compose:1.29.2
    entrypoint: [""]
  variables:
    TAG: test
    STACK: team5test
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker-compose -f deploy/docker-compose.yml pull
    - docker-compose -f deploy/docker-compose.yml up -d
  needs:
    - publish
  only:
    - test
  when: manual
  tags:
    - team5bootcamp

deploy-app-test:
  stage: deploy
  image:
    name: docker/compose:1.29.2
    entrypoint: [""]
  variables:
    TAG: test
    STACK: team5test
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker-compose -f deploy/docker-compose.yml pull fine-car-service
    - docker-compose -f deploy/docker-compose.yml up -d fine-car-service
  needs:
    - publish
  only:
    - test
  when: manual
  tags:
    - team5bootcamp

deploy-all-prod:
  stage: deploy
  image:
    name: docker/compose:1.29.2
    entrypoint: [""]
  variables:
    TAG: main
    STACK: team5prod
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker-compose -f deploy/docker-compose.yml pull
    - docker-compose -f deploy/docker-compose.yml up -d
  needs:
    - publish
  only:
    - main
